plugins {
    id 'multiloader-loader'
    id 'net.neoforged.gradle.userdev' version "${neo_gradle_userdev_version}"
    id 'me.modmuss50.mod-publish-plugin' version "${modmuss50_mod_publish_version}"
}

def at = file('src/main/resources/META-INF/accesstransformer.cfg')
if (at.exists()) {
    minecraft.accessTransformers.file at
}

runs {
    configureEach {
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven { url 'https://libs.azuredoom.com:4443/mods' }
    maven { url "https://minecraft.curseforge.com/api/maven/" }
    maven { url "https://cfa2.cursemaven.com" }
    maven { url 'https://api.modrinth.com/maven' }
    maven { url "https://maven.shedaniel.me" }
    mavenCentral()
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    implementation "mod.azure.azurelib:azurelib-neo-${minecraft_version}:${azurelib_version}"
    implementation "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"
    implementation "me.shedaniel.cloth:cloth-config-neoforge:${cloth_version}"
    implementation "dev.architectury:architectury-neoforge:${arch_version}"
    implementation "maven.modrinth:common-network:ICH3eKu6"
}

if (file('key.properties').exists()) {
    publishMods {
        def releaseProp = new Properties()
        File secretPropsFile = file("key.properties")
        releaseProp.load(secretPropsFile.newInputStream())
        file = jar.archiveFile
        changelog = rootProject.file("changelog.md").text
        type = STABLE
        modLoaders.add("neoforge")

        curseforge {
            projectId = project.curseforgeID
            projectSlug = project.projectSlug
            accessToken = releaseProp.getProperty("curseKey")
            minecraftVersions.add("${minecraft_version}")
            requires {
                slug = "azurelib"
            }
            requires {
                slug = "common-network"
            }
        }
        modrinth {
            projectId = project.modrinthID
            accessToken = releaseProp.getProperty('modrinthKey')
            minecraftVersions.add("${minecraft_version}")
            requires {
                slug = "azurelib"
            }
            requires {
                slug = "common-network"
            }
        }
    }
}